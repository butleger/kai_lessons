цели:
    - понимание как реверсить программы для window, linux
    - умение хорошо программировать на одном языке(python), глубоко понимать его инструментарий
    - умение понимать код других языков, знать примерный инструментарий других языков
    - хорошее понимание сетей, файерволлов
    - работа с github, на уровне написания патчей для OpenSource утилит
    - умение писать системные программы на языке C для linux/windows


Опционально:
    - программирование микроконтроллеров, ESP32
    - надо давать практические задания в соревновательной форме, а-ля 
	вот вам сервер, одни должны его поддерживать, другие поломать,
	сам сервер пишем уязмимым, или даже даем задание написать его им


общие идеи:
    - давать дз на закрепление материала
    - давать дз, чтобы мотивировать следующую лекцию
    - максимальная наглядность, а-ля вот мы подключились по ssh, сделали reboot
        и машина ушла в reboot
    - всегда говорить, если что-то не знал до лекции, типо вот узнал, оказывается так
    - явно проговорить что не все знания которые расскажем обязательны для жизни
        и некоторые узнали при подготовке к лекции
    - обязательно прикладывать: статьи, книжки, курсы на YouTube


Источники:
    - SPBCtf(youtube, site)
    - Кирилл Кринкин, stepik
    - Дмитрий Кетов
    - Андрей Созыкин
    - ФИВТ, МФТИ
    - Сергей Клименков, Операционные Системы
    - Таненбаум, Сетевые Операционные Системы
    - Таненбаум, Операционные Системы Разработка и Реализация
    - Олиферы Сети, короткая и большие книжки(полное название не помню)
    - Олиферы Сетевые ОС
    - Linux API полное руководство
    - Linux глазами хакера
    - losst
    - XGU
    - Сети для самых маленьких
    - Cisco Packet Tracer
    - Яндекс youtube, курсы
    - Mail.ru YouTube, курсы
    - Pwn College


Тренировки:
    - SPBCtf
    - HackTheBox
    - Metasploitable
    - Stepik
    - Exploit Education
    - Pwn Colledge


инструменты:
    - linux, на уровне хорошего администратора
    - openwrt, на уровне администратора
    - windows, на уровне реверсера
    - Android, на уровне реверсера
    - IOS, на уровне реверсера
    - виртуалки, Workstation, VirtualBox, ESXi, QEMU
    - ida pro
    - ghidra
    - OllyDBG, x64dbg, gdb, edb
    - python
    - C + ASM
    - docker, docker-compose
    - БД, SQL, NoSQL
    - github
    - системы сборки: Make, AutoMake, CMake, QMake, Maven, Gradle


План лекций:
    - Лекция 1, Введение:
        - знакомство
        - рассказ плана
        - объяснение компьютера на уровне есть процессор, есть оперативная память, есть постоянная память
        - объяснение как происходит установка операционной системы на виртуалку
        - установка виртуалок ubuntu-desktop в VirtualBox

    - Лекция 2, Введение в Linux:
        - базовое пользование терминалом(его запуск)
        - cd
        - ls
        - alias
        - cat
        - mv
        - ctrl-c, ctrl-z, ctrl-d
        - cp
        - chmod
        - rm
        - clear
        - mkdir
        - touch
        - grep
        - find
        - reboot
        - ctrl-r 
        - history
        - env vars
        - bash
        - bashrc
        - sudo 
        - df
        - ssh
        - scp
        - ping
        - kill
        - ps
        - top
        - htop
        - pstree
        - vim
        - nano
        - less
        - пакетные менеджеры, установка программ из репозитория(dpkg, apt, snap) + build pkg from git
        - AWK SED ??
    

    - Лекция 3: Базовое понимание сетей, 
        - провести аналогию с почтой
        - MAC-адрес
        - IP-адрес
        - TCP/UDP
        - OSI/TCP модель
        - nc - как пример
        - tcpdump
        - wireshark
        - tshark

    
    - Лекция 4: Процесс загрузки ELF файла
        - начиная с основ рассказать как пришли к C
        - написать hello-world на C
        - показать препроцессор
        - динамическая загрузка, ld.so, dll, so, ar, lib
        - показать полный путь генерации ELF файла
        - закинуть ELF-файл в ida pro
        - показать objdump
        - показать декомпиляторы: ida, cutter(+decompiler plugin), ghidra


    - Лекция 5: Реверс простого CrackMe + debugging
        - опираясь на предыдущкю лекцию запустить крякми
        - поиграться с функциями, восстановление имен струтур и тп хуета
        - найти нужные строки, упороться мб в функционал иды )(по необходимости)
        - найти алгоритм, определить его тип
        - крч конец, у нас осталось 2 человека и скорее всего они просто ничего не поняли и скоро тоже уйдут 

        